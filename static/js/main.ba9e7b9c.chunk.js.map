{"version":3,"sources":["firebase/config.js","firebase/useFirestore.js","firebase/firestoreFunctions.js","App.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","messagingSenderId","appId","measurementId","myFirestore","firestore","useFirestore","collectionName","useState","docs","setDocs","useEffect","unsubscribe","collection","onSnapshot","snap","newDocs","forEach","doc","push","data","id","uploadFirestore","set","then","console","log","catch","error","App","modules","collectionsList","setCollection","formType","setFormType","formTitle","setFormTitle","formContent","setFormContent","find","col","name","className","Dropdown","Toggle","variant","Menu","map","Item","onClick","types","sort","a","b","x","typeName","toLowerCase","y","type","text","moduleIDs","moduleID","module","title","value","onChange","e","target","preventDefault","newID","split","join","content","newTypes","typeExists","deleteID","delete","deleteFirestore","filter","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uPAWEA,IAASC,cATU,CACjBC,OAAQ,0CACRC,WAAY,oCACZC,UAAW,oBACXC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAKjB,IAAMC,EAAcR,IAASS,YCVlBC,EAAe,SAACC,GAAoB,IAAD,EACnBC,mBAAS,IADU,mBACrCC,EADqC,KAC9BC,EAD8B,KAc5C,OAZAC,qBAAU,WACN,IAAMC,EAAcR,EAAYS,WAAWN,GACtCO,YAAW,SAACC,GACT,IAAIC,EAAU,GACdD,EAAKE,SAAQ,SAAAC,GACTF,EAAQG,KAAR,2BAAiBD,EAAIE,QAArB,IAA6BC,GAAIH,EAAIG,SAEzCX,EAAQM,MAEhB,OAAO,kBAAMJ,OACd,CAACL,IAEGE,GCfEa,EAAkB,SAACT,EAAYK,GACxCd,EAAYS,WAAWA,GAAYK,IAAIA,EAAIG,IAAIE,IAAIL,GAAKM,MAAK,kBAAIC,QAAQC,IAAI,qCAAmCC,OAAM,SAASC,GAC3HH,QAAQG,MAAM,2BAA4BA,O,QCiKnCC,MA5Jf,WACE,IAAMC,EAAUxB,EAAa,2CACvByB,EAAkBzB,EAAa,yCAFxB,EAIuBE,mBAAS,MAJhC,mBAINK,EAJM,KAIMmB,EAJN,OAOmBxB,mBAAS,IAP5B,mBAONyB,EAPM,KAOIC,EAPJ,OAQqB1B,mBAAS,IAR9B,mBAQN2B,EARM,KAQKC,EARL,OASyB5B,mBAAS,IATlC,mBASN6B,EATM,KASOC,EATP,KA2Fb,OAhFA3B,qBAAU,WACRE,GAAcmB,EAAcD,EAAgBQ,MAAK,SAACC,GAAD,OAASA,EAAIC,OAAS5B,EAAW4B,WACjF,CAACV,EAAiBlB,IA+EnB,qBAAKQ,GAAG,MAAMqB,UAAU,QAAxB,SACE,qBAAKrB,GAAG,oBAAR,SACE,gCACE,iDACuBU,GACrB,eAACY,EAAA,EAAD,WACE,cAACA,EAAA,EAASC,OAAV,CAAiBC,QAAQ,QAAzB,SACKhC,EAAaA,EAAW4B,KAAO,sBAEpC,cAACE,EAAA,EAASG,KAAV,UACGf,EAAgBgB,KAAI,SAAAlC,GACnB,OACE,cAAC8B,EAAA,EAASK,KAAV,CAAe3B,GAAIR,EAAW4B,KAAMQ,QAAS,kBAAMjB,EAAcnB,IAAjE,SAA+EA,EAAW4B,eAMlFX,GAAWjB,GAC3BA,EAAWqC,MAAMC,MAAK,SAACC,EAAGC,GACxB,IAAIC,EAAIF,EAAEG,SAASC,cACfC,EAAIJ,EAAEE,SAASC,cACnB,OAAIF,EAAIG,GAAY,EAChBH,EAAIG,EAAW,EACZ,KACNV,KAAI,SAAAW,GACL,OACE,eAACf,EAAA,EAAD,CAAUtB,GAAIqC,EAAKH,SAAUb,UAAU,oBAAvC,UACE,cAACC,EAAA,EAASC,OAAV,CAAiBC,QAAQ,OAAzB,SACCa,EAAKH,WAEN,cAAC,kBAAD,CAAiBlC,GAAIqC,EAAKH,SAAUI,KAAMD,EAAKH,SAA/C,SAAyD,wBAAQb,UAAU,4BAAlB,yBACzD,cAACC,EAAA,EAASG,KAAV,UACGY,EAAKE,WAAaF,EAAKE,UAAUb,KAAI,SAAAc,GACpC,IAAIC,EAAShC,EAAQS,MAAK,SAAAuB,GAAM,OAAIA,EAAOzC,KAAOwC,KAClD,GAAGC,EACD,OACE,cAAC,kBAAD,CAAiBzC,GAAIwC,EAAUF,KAAMG,EAAOC,MAA5C,SAAmD,cAACpB,EAAA,EAASK,KAAV,CAAgBC,QAAS,kBAAMxB,QAAQC,IAAI,YAA3C,SAAwDoC,EAAOC,qBAQ7GjC,GAAWjB,GAC9B,uBAAM6B,UAAU,iBAAhB,UACE,0DACA,yCACA,uBAAOrB,GAAG,aAAaqC,KAAK,OAAOM,MAAO/B,EAAUgC,SA9HvC,SAACC,GACxBhC,EAAYgC,EAAEC,OAAOH,UA8HX,0CACA,uBAAO3C,GAAG,cAAcqC,KAAK,OAAOM,MAAO7B,EAAW8B,SA5HxC,SAACC,GACzB9B,EAAa8B,EAAEC,OAAOH,UA4HZ,4CACA,0BAAU3C,GAAG,gBAAgBqC,KAAK,OAAOM,MAAO3B,EAAa4B,SA1H7C,SAACC,GAC3B5B,EAAe4B,EAAEC,OAAOH,UA0Hd,wBAAQtB,UAAU,2BAA2BO,QAvHpC,SAACiB,GAGpB,GAFAA,EAAEE,iBAECnC,GAAYE,GAA6B,WAAhBE,GAA4C,KAAhBA,EAAmB,CAEzE,IAAIgC,EAAQxD,EAAW4B,KAAOR,EAAWE,EAIzC,GAHAkC,EAAQA,EAAMC,MAAM,KAAKC,KAAK,KAC9B9C,QAAQC,IAAI2C,GAETvC,EAAQS,MAAK,SAAAuB,GAAM,OAAIA,EAAOzC,KAAOgD,KAEtC/C,EAAgB,0CAA2C,CAACyC,MAAO5B,EAAWqC,QAASnC,EAAahB,GAAIgD,QACnG,CAEL/C,EAAgB,0CAA2C,CAACyC,MAAO5B,EAAWqC,QAASnC,EAAahB,GAAIgD,IACxG,IAAII,EAAQ,YAAO5D,EAAWqC,OAE1BwB,EAAa7D,EAAWqC,MAAMX,MAAK,SAACmB,GAAD,OAAUA,EAAKH,WAAatB,KAChEyC,EACDA,EAAWd,UAAUzC,KAAKkD,GAI1BI,EAAStD,KAAK,CAACoC,SAAUtB,EAAU2B,UAAW,CAACS,KAGjD/C,EAAgB,wCAAD,YAAC,eAA6CT,GAA9C,IAA0DqC,MAAOuB,WAI/E,GAAIxC,GAAYE,GAA8B,WAAjBE,EAAkC,CAElE,IAAIsC,EAAW9D,EAAW4B,KAAOR,EAAWE,EAK5C,GAJAwC,EAAWA,EAASL,MAAM,KAAKC,KAAK,KACpC9C,QAAQC,IAAI,YAAcI,GAC1BL,QAAQC,IAAI,cAAgBiD,GAC5BlD,QAAQC,IAAII,EAAQiB,KAAI,SAAAe,GAAM,OAAIrC,QAAQC,IAAIoC,EAAOzC,QAClDS,EAAQS,MAAK,SAACuB,GAAD,OAAYA,EAAOzC,KAAOsD,KAAU,EDjE3B,SAAC9D,EAAYQ,GACxCjB,EAAYS,WAAWA,GAAYK,IAAIG,GAAIuD,SAASpD,MAAK,kBAAIC,QAAQC,IAAI,sCAAoCC,OAAM,SAASC,GACxHH,QAAQG,MAAM,4BAA6BA,MCiE3CiD,CAAgB,yCAA0CF,GAE1D,IAAIF,EAAQ,YAAO5D,EAAWqC,OAC1BwB,EAAa7D,EAAWqC,MAAMX,MAAK,SAACmB,GAAD,OAAUA,EAAKH,WAAatB,KACnEyC,EAAWd,UAAYc,EAAWd,UAAUkB,QAAO,SAACjB,GAAD,OAAcA,IAAac,KAC3C,IAAhCD,EAAWd,UAAUmB,SAEtBN,EAAWA,EAASK,QAAO,SAACpB,GAAD,OAAUA,EAAKH,WAAatB,MAEzDX,EAAgB,wCAAD,YAAC,eAA6CT,GAA9C,IAA0DqC,MAAOuB,UAGhFhD,QAAQC,IAAI,8BAELO,GAA4B,WAAhBI,EACrBZ,QAAQC,IAAI,0BAEZD,QAAQC,IAAI,mBAEdQ,EAAY,IACZE,EAAa,IACbE,EAAe,KA2DL,+BCvJd0C,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.ba9e7b9c.chunk.js","sourcesContent":["import firebase from 'firebase'\r\n\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyDmZSo7o8WB-bsge5T_Rd9VJdODhA-wD2Y\",\r\n    authDomain: \"my-firebase-1f789.firebaseapp.com\",\r\n    projectId: \"my-firebase-1f789\",\r\n    messagingSenderId: \"917517905132\",\r\n    appId: \"1:917517905132:web:2cc22f398c1a2511a209c9\",\r\n    measurementId: \"G-7N4N4SG1FZ\"\r\n  };\r\n  // Initialize Firebase\r\n  firebase.initializeApp(firebaseConfig);\r\n\r\n  const myFirestore = firebase.firestore();\r\n\r\n  export { myFirestore };","import { useState , useEffect } from 'react'\r\nimport { myFirestore } from '../firebase/config.js'\r\n\r\nexport const useFirestore = (collectionName) => {\r\n    const [docs , setDocs] = useState([]);\r\n    useEffect(()=>{\r\n        const unsubscribe = myFirestore.collection(collectionName)\r\n            .onSnapshot((snap)=>{\r\n                let newDocs = [];\r\n                snap.forEach(doc=>{\r\n                    newDocs.push({...doc.data(), id: doc.id})\r\n                })\r\n                setDocs(newDocs);\r\n            })\r\n        return () => unsubscribe();\r\n    }, [collectionName]);\r\n\r\n    return docs;\r\n}","import { myFirestore } from './config.js'\r\n\r\nexport const uploadFirestore = (collection, doc) => {\r\n    myFirestore.collection(collection).doc(doc.id).set(doc).then(()=>console.log(\"document uploaded to firestore\")).catch(function(error) {\r\n        console.error(\"Error writing document: \", error);\r\n    });;\r\n}\r\n\r\nexport const deleteFirestore = (collection, id) => {\r\n    myFirestore.collection(collection).doc(id).delete().then(()=>console.log(\"document deleted from firestore\")).catch(function(error) {\r\n        console.error(\"Error deleting document: \", error);\r\n    });;\r\n}","import 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css'\nimport { Dropdown } from 'react-bootstrap'\nimport { useState , useEffect } from 'react';\nimport { useFirestore } from './firebase/useFirestore';\nimport { uploadFirestore , deleteFirestore } from './firebase/firestoreFunctions';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\n\n//ADMIN PAGE\nfunction App() {\n  const modules = useFirestore('/moduloose/Uw7nTXVOrY0nocrZDLWH/Modules');\n  const collectionsList = useFirestore('moduloose/Uw7nTXVOrY0nocrZDLWH/Skills');\n  \n  const [collection, setCollection] = useState(null);\n  \n  //MODULE FORM\n  const [formType, setFormType] = useState(\"\");\n  const [formTitle, setFormTitle] = useState(\"\");\n  const [formContent, setFormContent] = useState(\"\");\n\n  useEffect(()=>{\n    collection && setCollection(collectionsList.find((col) => col.name === collection.name));\n  }, [collectionsList, collection])\n  \n  const handleChangeType = (e) => {\n    setFormType(e.target.value);\n  }\n\n  const handleChangeTitle = (e) => {\n    setFormTitle(e.target.value);\n  }\n\n  const handleChangeContent = (e) => {\n    setFormContent(e.target.value);\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    \n    if(formType && formTitle && formContent !== \"delete\" && formContent !== \"\"){\n      //ADDING OR UPDATING\n      let newID = collection.name + formType + formTitle;\n      newID = newID.split(\" \").join(\"_\");\n      console.log(newID);\n\n      if(modules.find(module => module.id === newID)){\n        //UPDATING MODULE\n        uploadFirestore('/moduloose/Uw7nTXVOrY0nocrZDLWH/Modules', {title: formTitle, content: formContent, id: newID});\n      } else {\n        //CREATING MODULE\n        uploadFirestore('/moduloose/Uw7nTXVOrY0nocrZDLWH/Modules', {title: formTitle, content: formContent, id: newID});\n        let newTypes = [...collection.types];\n        ////TYPE EXISTS\n        let typeExists = collection.types.find((type) => type.typeName === formType);\n        if(typeExists) {\n          typeExists.moduleIDs.push(newID);\n        } \n        ////TYPE DOES NOT EXIST\n        else {\n          newTypes.push({typeName: formType, moduleIDs: [newID]})\n        }\n        //UPLOAD COLLECTION\n        uploadFirestore('moduloose/Uw7nTXVOrY0nocrZDLWH/Skills', {...collection, types: newTypes});\n      }\n    } \n    \n    else if (formType && formTitle && formContent === (\"delete\" || \"\")) {\n      //DELETING MODULE\n      let deleteID = collection.name + formType + formTitle;\n      deleteID = deleteID.split(\" \").join(\"_\");\n      console.log(\"MODULES: \" + modules);\n      console.log(\"Delete ID: \" + deleteID);\n      console.log(modules.map(module => console.log(module.id)));\n      if(modules.find((module) => module.id === deleteID)){\n        //MODULE EXISTS\n        deleteFirestore('moduloose/Uw7nTXVOrY0nocrZDLWH/Modules', deleteID);\n        //ELIMINATION MODULE ID FROM COLLECTION\n        let newTypes = [...collection.types];\n        let typeExists = collection.types.find((type) => type.typeName === formType);\n        typeExists.moduleIDs = typeExists.moduleIDs.filter((moduleID) => moduleID !== deleteID);\n        if(typeExists.moduleIDs.length === 0){\n          ////EMPTY TYPE, DELETE\n          newTypes = newTypes.filter((type) => type.typeName !== formType);\n        }\n        uploadFirestore('moduloose/Uw7nTXVOrY0nocrZDLWH/Skills', {...collection, types: newTypes});\n      } else {\n        //MODULE DOES NOT EXIST\n        console.log(\"Module does not exist\");\n      }\n    } else if (formType && formContent === \"delete\"){\n      console.log(\"We are deleting a type\");\n    } else {\n      console.log(\"No valid option\");\n    }\n    setFormType(\"\");\n    setFormTitle(\"\");\n    setFormContent(\"\");\n  }\n\n  //RENDER USER PAGE\n  return (\n    <div id=\"app\" className=\"admin\">\n      <div id=\"content-container\">\n        <div>\n          <h1>Moduloose Admin</h1>\n          {/*SELECT COLLECTION*/ collectionsList &&\n            <Dropdown>\n              <Dropdown.Toggle variant=\"light\">\n                  {collection ? collection.name : \"Select Collection\"}\n              </Dropdown.Toggle>\n              <Dropdown.Menu>\n                {collectionsList.map(collection => {\n                  return(\n                    <Dropdown.Item id={collection.name} onClick={() => setCollection(collection)}>{collection.name}</Dropdown.Item>\n                  );\n                })}\n              </Dropdown.Menu>\n            </Dropdown>\n          }\n          {/*VIEW MODULES*/ modules && collection &&\n            collection.types.sort((a, b)=>{\n              var x = a.typeName.toLowerCase();\n              var y = b.typeName.toLowerCase();\n              if (x < y) {return -1;}\n              if (x > y) {return 1;}\n              return 0;\n            }).map(type => {\n              return (\n                <Dropdown id={type.typeName} className=\"selector-dropdown\">\n                  <Dropdown.Toggle variant=\"dark\">\n                  {type.typeName} \n                  </Dropdown.Toggle>\n                  <CopyToClipboard id={type.typeName} text={type.typeName}><button className=\"btn btn-light edit-button\">Copy Type</button></CopyToClipboard>\n                  <Dropdown.Menu>\n                    {type.moduleIDs && type.moduleIDs.map(moduleID => {\n                      let module = modules.find(module => module.id === moduleID); \n                      if(module){\n                        return(\n                          <CopyToClipboard id={moduleID} text={module.title}><Dropdown.Item  onClick={() => console.log(\"Clicked\")}>{module.title}</Dropdown.Item></CopyToClipboard>\n                        );}\n                    })}\n                  </Dropdown.Menu>\n                </Dropdown>\n              )\n            })\n          }\n          {/*EDIT MODULE FORM*/modules && collection &&\n            <form className=\"form-container\">\n              <h3>Add-Update-Remove Module</h3>\n              <label>Type</label>\n              <input id=\"type-input\" type=\"text\" value={formType} onChange={handleChangeType}></input>\n              <label>Title</label>\n              <input id=\"title-input\" type=\"text\" value={formTitle} onChange={handleChangeTitle}></input>\n              <label>Content</label>\n              <textarea id=\"content-input\" type=\"text\" value={formContent} onChange={handleChangeContent}></textarea>\n              <button className=\"btn btn-dark edit-button\" onClick={handleSubmit}>Submit</button>\n            </form>       \n          }\n        </div>\n      </div>\n    </div>\n  );\n  \n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}